"use strict";var precacheConfig=[["/index.html","d11661a25ed046d8f6e9fbca4c0b924e"],["/static/js/main.770730b2.js","387b15fc2e890886ce2b64abbdeb1f06"],["/static/media/cart-dropdown.styles.d7db890a.scss","d7db890a6a8327bb17a6c117c4279268"],["/static/media/cart-icon.styles.111917e8.scss","111917e8e60cdb1458fd2cb64625816e"],["/static/media/cart-item.styles.f9f8823b.scss","f9f8823b844b14cea0f319deb9f90aa1"],["/static/media/cart.30f07071.svg","30f0707118fb960665491424c115ac44"],["/static/media/collection-item.styles.9604615a.scss","9604615aa734f146705a44fa2bcd8434"],["/static/media/collection-preview.styles.f3c6b840.scss","f3c6b8403c1777cd3087d8a2ddbfa9b2"],["/static/media/custom-button.styles.061704c5.scss","061704c5fa8fc2a51c923a53ac4edcc4"],["/static/media/directory.styles.f64e89bc.scss","f64e89bcf10753dcf3cd4116e58ff1fc"],["/static/media/form-input.styles.4ccda1ae.scss","4ccda1ae9d4eda1ebe0988a8a35d63d0"],["/static/media/header.styles.b3e961a1.scss","b3e961a199fe2d2ccc081de339430da1"],["/static/media/homepage.styles.e97cf024.scss","e97cf0246c899370874ed726255ee863"],["/static/media/logo.ed28accb.svg","ed28accb7dd58a0469bff983503ff07e"],["/static/media/menu-item.styles.43c16032.scss","43c1603201ae7924dabd91bccb6b52b6"],["/static/media/sign-in-and-sign-up.styles.61a1d89c.scss","61a1d89cc9dc5936a30cba1687690168"],["/static/media/sign-in.styles.c6800ddf.scss","c6800ddfa23a5b239220c5894d3d69cb"],["/static/media/sign-up.styles.2b71a05c.scss","2b71a05cf0e17a769c613a61ae6d6071"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var s=new URL(e);return"/"===s.pathname.slice(-1)&&(s.pathname+=t),s.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,s,a){var c=new URL(e);return a&&c.pathname.match(a)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(s)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var s=new URL(t).pathname;return e.some(function(e){return s.match(e)})},stripIgnoredUrlParameters=function(e,s){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return s.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],s=e[1],a=new URL(t,self.location),c=createCacheKey(a,hashParamName,s,/\.\w{8}\./);return[a.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(a){return setOfCachedUrls(a).then(function(s){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!s.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return a.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var s=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!s.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,s=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),a="index.html";(e=urlsToCacheKeys.has(s))||(s=addDirectoryIndex(s,a),e=urlsToCacheKeys.has(s));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(s=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(s)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(s)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});